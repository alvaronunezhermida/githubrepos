package com.githubrepos.app.data_implementation.remote.models

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

@JsonClass(generateAdapter = false)
data class RepoDTO(
    @field:Json(name = "id") val id: Int,
    @field:Json(name = "node_id") val nodeId: String,
    @field:Json(name = "name") val name: String,
    @field:Json(name = "full_name") val fullName: String,
    @field:Json(name = "private") val private: Boolean,
    @field:Json(name = "owner") val owner: OwnerDTO,
    @field:Json(name = "html_url") val htmlUrl: String,
    @field:Json(name = "description") val description: String,
    @field:Json(name = "fork") val fork: Boolean,
    @field:Json(name = "url") val url: String,
    @field:Json(name = "forks_url") val forksUrl: String,
    @field:Json(name = "keys_url") val keysUrl: String,
    @field:Json(name = "collaborators_url") val collaboratorsUrl: String,
    @field:Json(name = "teams_url") val teamsUrl: String,
    @field:Json(name = "hooks_url") val hooksUrl: String,
    @field:Json(name = "issue_events_url") val issueEventsUrl: String,
    @field:Json(name = "events_url") val eventsUrl: String,
    @field:Json(name = "assignees_url") val assigneesUrl: String,
    @field:Json(name = "branches_url") val branchesUrl: String,
    @field:Json(name = "tags_url") val tagsUrl: String,
    @field:Json(name = "blobs_url") val blobsUrl: String,
    @field:Json(name = "git_tags_url") val gitTagsUrl: String,
    @field:Json(name = "git_refs_url") val gitRefsUrl: String,
    @field:Json(name = "trees_url") val treesUrl: String,
    @field:Json(name = "statuses_url") val statusesUrl: String,
    @field:Json(name = "languages_url") val languagesUrl: String,
    @field:Json(name = "stargazers_url") val stargazersUrl: String,
    @field:Json(name = "contributors_url") val contributorsUrl: String,
    @field:Json(name = "subscribers_url") val subscribersUrl: String,
    @field:Json(name = "subscription_url") val subscriptionUrl: String,
    @field:Json(name = "commits_url") val commitsUrl: String,
    @field:Json(name = "git_commits_url") val gitCommitsUrl: String,
    @field:Json(name = "comments_url") val commentsUrl: String,
    @field:Json(name = "issue_comment_url") val issueCommentUrl: String,
    @field:Json(name = "contents_url") val contentsUrl: String,
    @field:Json(name = "compare_url") val compareUrl: String,
    @field:Json(name = "merges_url") val mergesUrl: String,
    @field:Json(name = "archive_url") val archiveUrl: String,
    @field:Json(name = "downloads_url") val downloadsUrl: String,
    @field:Json(name = "issues_url") val issuesUrl: String,
    @field:Json(name = "pulls_url") val pullsUrl: String,
    @field:Json(name = "milestones_url") val milestonesUrl: String,
    @field:Json(name = "notifications_url") val notificationsUrl: String,
    @field:Json(name = "labels_url") val labelsUrl: String,
    @field:Json(name = "releases_url") val releasesUrl: String,
    @field:Json(name = "deployments_url") val deploymentsUrl: String
)